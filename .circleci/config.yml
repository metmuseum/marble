version: 2.1
commands:
  install-npm-packages:
    description: Use npm ci to install from package-lock.json, using cache
    parameters:
      cache_key:
        default: package-lock-{{ checksum "package-lock.json" }}
        type: string
    steps:
      - restore_cache:
          key: <<parameters.cache_key>>
      - run: npm ci
      - save_cache:
          key: <<parameters.cache_key>>
          paths:
            - node_modules
jobs:
  setup_marble:
    docker:
      - image: "circleci/node:latest"
    steps:
      - checkout
      - install-npm-packages
  build_static_storybook:
    docker:
      - image: "circleci/node:latest"
    steps:
      - run:
          name: "Build static storybook to ./.out"
          command: npm run build-storybook
  do_chromatic:
    docker:
      - image: "circleci/node:latest"
    steps:
      - run:
          name: "Run full chromatic. This job does not run for main. If PR: build and test. If not: build only and skip snapshots"
          command: '[[ ! -z "$CIRCLE_PULL_REQUEST" ]] && npx chromatic --ci --storybook-build-dir .out || npx chromatic --ci --storybook-build-dir ./.out --only ./src/components/image-container/image-container.stories.js'
  deploy_github:
    docker:
      - image: "circleci/node:latest"
    steps:
      - run:
          name: "Run Storybook GitHub Pages Deployer Script"
          command: npm run deploy-storybook -- --ci --host-token-env-variable=GITHUB_TOKEN --existing-output-dir=.out
workflows:
  version: 2
  build_do_chromatic_deploy_github:
    jobs:
      - setup_marble
      - build_static_storybook:
          requires:
            - setup_marble
      - do_chromatic:
          requires:
            - build_static_storybook
          branches:
            ignore:
              - main
      - deploy_github:
          requires:
            - build_static_storybook
          filters:
            branches:
              only:
                - main
