version: 2.1
executors:
  marble-node:
    docker:
      - image: "cimg/node:lts"
jobs:
  setup_marble:
    executor: marble-node
    steps:
      - checkout
      - run: node --version
      - run: npm --version
      - run: npm i --prefix=./tmp --global pnpm # hack to install pnpm with npm until https://github.com/CircleCI-Public/cimg-node/issues/216
      - run: ./tmp/bin/pnpm --version
      - restore_cache:
          keys:
          - pnpm-cache-{{ checksum "pnpm-lock.yaml" }}
      - run: ./tmp/bin/pnpm install --frozen-lockfile
      - save_cache:
          key: pnpm-cache-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store
      - run: ./tmp/bin/pnpm run lint
      - run: ./tmp/bin/pnpm run stylelint
      - persist_to_workspace:
          root: .
          paths:
            - .
  build_static_storybook:
    executor: marble-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "Build static storybook to ./.out"
          command: ./tmp/bin/pnpm run build-storybook
      - persist_to_workspace:
          root: .
          paths:
            - .
  do_chromatic:
    executor: marble-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: "Run Chromatic"
          command: ./tmp/bin/pnpm run chromatic --ci --exit-once-uploaded --storybook-build-dir .out
  deploy_gh_pages:
    executor: marble-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "50:f8:e7:4b:75:10:ff:83:d3:dc:ca:77:7b:f7:72:8a"
      - run:
          name: "Run Storybook GitHub Pages Deployer Script"
          command: ./tmp/bin/pnpm run deploy-storybook -- --ci --existing-output-dir=.out
  build_and_deploy_dist:
    executor: marble-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "50:f8:e7:4b:75:10:ff:83:d3:dc:ca:77:7b:f7:72:8a"
      - run:
          name: "Build Marble's ./dist for production!"
          command: ./tmp/bin/pnpm run build
      - run: git config user.email "stephen.marsh@metmuseum.org"
      - run: git config user.name "Marble Bot"
      - run: ./tmp/bin/pnpm run build
      - run: node ./.circleci/scripts/git_steps_for_dist_build.js
      - persist_to_workspace:
          root: .
          paths:
            - .
  tag_a_release:
    executor: marble-node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "50:f8:e7:4b:75:10:ff:83:d3:dc:ca:77:7b:f7:72:8a"
      - run: git config user.email "stephen.marsh@metmuseum.org"
      - run: git config user.name "Marble Bot"
      - run:
          name: "Use release-it to tag and push to GitHub as release"
          command: DEBUG=release-it:* ./tmp/bin/pnpm run release -- patch --ci -VV --no-git.requireUpstream --set-upstream origin main

workflows:
  build__do_chromatic__deploy_gh_pages__build_and_deploy_dist__tag_a_release:
    jobs:
      - setup_marble:
          filters:
            branches:
              ignore:
                - gh-pages
      - build_static_storybook:
          requires:
            - setup_marble
      - do_chromatic:
          requires:
            - build_static_storybook
      - deploy_gh_pages:
          requires:
            - build_static_storybook
          filters:
            branches:
              only:
                - main
      - build_and_deploy_dist:
          requires:
            - setup_marble
          filters:
            branches:
              only:
                - main
      - tag_a_release:
          requires:
            - build_and_deploy_dist
          filters:
            branches:
              only:
                - main
